
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `EducationSubItem` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model EducationSubItem
 * 
 */
export type EducationSubItemModel = runtime.Types.Result.DefaultSelection<Prisma.$EducationSubItemPayload>

export type AggregateEducationSubItem = {
  _count: EducationSubItemCountAggregateOutputType | null
  _min: EducationSubItemMinAggregateOutputType | null
  _max: EducationSubItemMaxAggregateOutputType | null
}

export type EducationSubItemMinAggregateOutputType = {
  id: string | null
  educationId: string | null
  title: string | null
  message: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EducationSubItemMaxAggregateOutputType = {
  id: string | null
  educationId: string | null
  title: string | null
  message: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EducationSubItemCountAggregateOutputType = {
  id: number
  educationId: number
  title: number
  message: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type EducationSubItemMinAggregateInputType = {
  id?: true
  educationId?: true
  title?: true
  message?: true
  createdAt?: true
  updatedAt?: true
}

export type EducationSubItemMaxAggregateInputType = {
  id?: true
  educationId?: true
  title?: true
  message?: true
  createdAt?: true
  updatedAt?: true
}

export type EducationSubItemCountAggregateInputType = {
  id?: true
  educationId?: true
  title?: true
  message?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type EducationSubItemAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EducationSubItem to aggregate.
   */
  where?: Prisma.EducationSubItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EducationSubItems to fetch.
   */
  orderBy?: Prisma.EducationSubItemOrderByWithRelationInput | Prisma.EducationSubItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.EducationSubItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EducationSubItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EducationSubItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned EducationSubItems
  **/
  _count?: true | EducationSubItemCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: EducationSubItemMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: EducationSubItemMaxAggregateInputType
}

export type GetEducationSubItemAggregateType<T extends EducationSubItemAggregateArgs> = {
      [P in keyof T & keyof AggregateEducationSubItem]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEducationSubItem[P]>
    : Prisma.GetScalarType<T[P], AggregateEducationSubItem[P]>
}




export type EducationSubItemGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EducationSubItemWhereInput
  orderBy?: Prisma.EducationSubItemOrderByWithAggregationInput | Prisma.EducationSubItemOrderByWithAggregationInput[]
  by: Prisma.EducationSubItemScalarFieldEnum[] | Prisma.EducationSubItemScalarFieldEnum
  having?: Prisma.EducationSubItemScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: EducationSubItemCountAggregateInputType | true
  _min?: EducationSubItemMinAggregateInputType
  _max?: EducationSubItemMaxAggregateInputType
}

export type EducationSubItemGroupByOutputType = {
  id: string
  educationId: string
  title: string
  message: string | null
  createdAt: Date
  updatedAt: Date
  _count: EducationSubItemCountAggregateOutputType | null
  _min: EducationSubItemMinAggregateOutputType | null
  _max: EducationSubItemMaxAggregateOutputType | null
}

type GetEducationSubItemGroupByPayload<T extends EducationSubItemGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EducationSubItemGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof EducationSubItemGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EducationSubItemGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EducationSubItemGroupByOutputType[P]>
      }
    >
  > 



export type EducationSubItemWhereInput = {
  AND?: Prisma.EducationSubItemWhereInput | Prisma.EducationSubItemWhereInput[]
  OR?: Prisma.EducationSubItemWhereInput[]
  NOT?: Prisma.EducationSubItemWhereInput | Prisma.EducationSubItemWhereInput[]
  id?: Prisma.StringFilter<"EducationSubItem"> | string
  educationId?: Prisma.StringFilter<"EducationSubItem"> | string
  title?: Prisma.StringFilter<"EducationSubItem"> | string
  message?: Prisma.StringNullableFilter<"EducationSubItem"> | string | null
  createdAt?: Prisma.DateTimeFilter<"EducationSubItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"EducationSubItem"> | Date | string
  education?: Prisma.XOR<Prisma.EducationScalarRelationFilter, Prisma.EducationWhereInput>
  translations?: Prisma.TranslationListRelationFilter
}

export type EducationSubItemOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  educationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  message?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  education?: Prisma.EducationOrderByWithRelationInput
  translations?: Prisma.TranslationOrderByRelationAggregateInput
}

export type EducationSubItemWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.EducationSubItemWhereInput | Prisma.EducationSubItemWhereInput[]
  OR?: Prisma.EducationSubItemWhereInput[]
  NOT?: Prisma.EducationSubItemWhereInput | Prisma.EducationSubItemWhereInput[]
  educationId?: Prisma.StringFilter<"EducationSubItem"> | string
  title?: Prisma.StringFilter<"EducationSubItem"> | string
  message?: Prisma.StringNullableFilter<"EducationSubItem"> | string | null
  createdAt?: Prisma.DateTimeFilter<"EducationSubItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"EducationSubItem"> | Date | string
  education?: Prisma.XOR<Prisma.EducationScalarRelationFilter, Prisma.EducationWhereInput>
  translations?: Prisma.TranslationListRelationFilter
}, "id">

export type EducationSubItemOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  educationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  message?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.EducationSubItemCountOrderByAggregateInput
  _max?: Prisma.EducationSubItemMaxOrderByAggregateInput
  _min?: Prisma.EducationSubItemMinOrderByAggregateInput
}

export type EducationSubItemScalarWhereWithAggregatesInput = {
  AND?: Prisma.EducationSubItemScalarWhereWithAggregatesInput | Prisma.EducationSubItemScalarWhereWithAggregatesInput[]
  OR?: Prisma.EducationSubItemScalarWhereWithAggregatesInput[]
  NOT?: Prisma.EducationSubItemScalarWhereWithAggregatesInput | Prisma.EducationSubItemScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"EducationSubItem"> | string
  educationId?: Prisma.StringWithAggregatesFilter<"EducationSubItem"> | string
  title?: Prisma.StringWithAggregatesFilter<"EducationSubItem"> | string
  message?: Prisma.StringNullableWithAggregatesFilter<"EducationSubItem"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"EducationSubItem"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"EducationSubItem"> | Date | string
}

export type EducationSubItemCreateInput = {
  id?: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  education: Prisma.EducationCreateNestedOneWithoutSubItemsInput
  translations?: Prisma.TranslationCreateNestedManyWithoutEducationSubItemInput
}

export type EducationSubItemUncheckedCreateInput = {
  id?: string
  educationId: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  translations?: Prisma.TranslationUncheckedCreateNestedManyWithoutEducationSubItemInput
}

export type EducationSubItemUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  education?: Prisma.EducationUpdateOneRequiredWithoutSubItemsNestedInput
  translations?: Prisma.TranslationUpdateManyWithoutEducationSubItemNestedInput
}

export type EducationSubItemUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  educationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translations?: Prisma.TranslationUncheckedUpdateManyWithoutEducationSubItemNestedInput
}

export type EducationSubItemCreateManyInput = {
  id?: string
  educationId: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EducationSubItemUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EducationSubItemUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  educationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EducationSubItemListRelationFilter = {
  every?: Prisma.EducationSubItemWhereInput
  some?: Prisma.EducationSubItemWhereInput
  none?: Prisma.EducationSubItemWhereInput
}

export type EducationSubItemOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EducationSubItemCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  educationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  message?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EducationSubItemMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  educationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  message?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EducationSubItemMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  educationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  message?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EducationSubItemNullableScalarRelationFilter = {
  is?: Prisma.EducationSubItemWhereInput | null
  isNot?: Prisma.EducationSubItemWhereInput | null
}

export type EducationSubItemCreateNestedManyWithoutEducationInput = {
  create?: Prisma.XOR<Prisma.EducationSubItemCreateWithoutEducationInput, Prisma.EducationSubItemUncheckedCreateWithoutEducationInput> | Prisma.EducationSubItemCreateWithoutEducationInput[] | Prisma.EducationSubItemUncheckedCreateWithoutEducationInput[]
  connectOrCreate?: Prisma.EducationSubItemCreateOrConnectWithoutEducationInput | Prisma.EducationSubItemCreateOrConnectWithoutEducationInput[]
  createMany?: Prisma.EducationSubItemCreateManyEducationInputEnvelope
  connect?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
}

export type EducationSubItemUncheckedCreateNestedManyWithoutEducationInput = {
  create?: Prisma.XOR<Prisma.EducationSubItemCreateWithoutEducationInput, Prisma.EducationSubItemUncheckedCreateWithoutEducationInput> | Prisma.EducationSubItemCreateWithoutEducationInput[] | Prisma.EducationSubItemUncheckedCreateWithoutEducationInput[]
  connectOrCreate?: Prisma.EducationSubItemCreateOrConnectWithoutEducationInput | Prisma.EducationSubItemCreateOrConnectWithoutEducationInput[]
  createMany?: Prisma.EducationSubItemCreateManyEducationInputEnvelope
  connect?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
}

export type EducationSubItemUpdateManyWithoutEducationNestedInput = {
  create?: Prisma.XOR<Prisma.EducationSubItemCreateWithoutEducationInput, Prisma.EducationSubItemUncheckedCreateWithoutEducationInput> | Prisma.EducationSubItemCreateWithoutEducationInput[] | Prisma.EducationSubItemUncheckedCreateWithoutEducationInput[]
  connectOrCreate?: Prisma.EducationSubItemCreateOrConnectWithoutEducationInput | Prisma.EducationSubItemCreateOrConnectWithoutEducationInput[]
  upsert?: Prisma.EducationSubItemUpsertWithWhereUniqueWithoutEducationInput | Prisma.EducationSubItemUpsertWithWhereUniqueWithoutEducationInput[]
  createMany?: Prisma.EducationSubItemCreateManyEducationInputEnvelope
  set?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  disconnect?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  delete?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  connect?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  update?: Prisma.EducationSubItemUpdateWithWhereUniqueWithoutEducationInput | Prisma.EducationSubItemUpdateWithWhereUniqueWithoutEducationInput[]
  updateMany?: Prisma.EducationSubItemUpdateManyWithWhereWithoutEducationInput | Prisma.EducationSubItemUpdateManyWithWhereWithoutEducationInput[]
  deleteMany?: Prisma.EducationSubItemScalarWhereInput | Prisma.EducationSubItemScalarWhereInput[]
}

export type EducationSubItemUncheckedUpdateManyWithoutEducationNestedInput = {
  create?: Prisma.XOR<Prisma.EducationSubItemCreateWithoutEducationInput, Prisma.EducationSubItemUncheckedCreateWithoutEducationInput> | Prisma.EducationSubItemCreateWithoutEducationInput[] | Prisma.EducationSubItemUncheckedCreateWithoutEducationInput[]
  connectOrCreate?: Prisma.EducationSubItemCreateOrConnectWithoutEducationInput | Prisma.EducationSubItemCreateOrConnectWithoutEducationInput[]
  upsert?: Prisma.EducationSubItemUpsertWithWhereUniqueWithoutEducationInput | Prisma.EducationSubItemUpsertWithWhereUniqueWithoutEducationInput[]
  createMany?: Prisma.EducationSubItemCreateManyEducationInputEnvelope
  set?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  disconnect?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  delete?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  connect?: Prisma.EducationSubItemWhereUniqueInput | Prisma.EducationSubItemWhereUniqueInput[]
  update?: Prisma.EducationSubItemUpdateWithWhereUniqueWithoutEducationInput | Prisma.EducationSubItemUpdateWithWhereUniqueWithoutEducationInput[]
  updateMany?: Prisma.EducationSubItemUpdateManyWithWhereWithoutEducationInput | Prisma.EducationSubItemUpdateManyWithWhereWithoutEducationInput[]
  deleteMany?: Prisma.EducationSubItemScalarWhereInput | Prisma.EducationSubItemScalarWhereInput[]
}

export type EducationSubItemCreateNestedOneWithoutTranslationsInput = {
  create?: Prisma.XOR<Prisma.EducationSubItemCreateWithoutTranslationsInput, Prisma.EducationSubItemUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.EducationSubItemCreateOrConnectWithoutTranslationsInput
  connect?: Prisma.EducationSubItemWhereUniqueInput
}

export type EducationSubItemUpdateOneWithoutTranslationsNestedInput = {
  create?: Prisma.XOR<Prisma.EducationSubItemCreateWithoutTranslationsInput, Prisma.EducationSubItemUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.EducationSubItemCreateOrConnectWithoutTranslationsInput
  upsert?: Prisma.EducationSubItemUpsertWithoutTranslationsInput
  disconnect?: Prisma.EducationSubItemWhereInput | boolean
  delete?: Prisma.EducationSubItemWhereInput | boolean
  connect?: Prisma.EducationSubItemWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EducationSubItemUpdateToOneWithWhereWithoutTranslationsInput, Prisma.EducationSubItemUpdateWithoutTranslationsInput>, Prisma.EducationSubItemUncheckedUpdateWithoutTranslationsInput>
}

export type EducationSubItemCreateWithoutEducationInput = {
  id?: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  translations?: Prisma.TranslationCreateNestedManyWithoutEducationSubItemInput
}

export type EducationSubItemUncheckedCreateWithoutEducationInput = {
  id?: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  translations?: Prisma.TranslationUncheckedCreateNestedManyWithoutEducationSubItemInput
}

export type EducationSubItemCreateOrConnectWithoutEducationInput = {
  where: Prisma.EducationSubItemWhereUniqueInput
  create: Prisma.XOR<Prisma.EducationSubItemCreateWithoutEducationInput, Prisma.EducationSubItemUncheckedCreateWithoutEducationInput>
}

export type EducationSubItemCreateManyEducationInputEnvelope = {
  data: Prisma.EducationSubItemCreateManyEducationInput | Prisma.EducationSubItemCreateManyEducationInput[]
  skipDuplicates?: boolean
}

export type EducationSubItemUpsertWithWhereUniqueWithoutEducationInput = {
  where: Prisma.EducationSubItemWhereUniqueInput
  update: Prisma.XOR<Prisma.EducationSubItemUpdateWithoutEducationInput, Prisma.EducationSubItemUncheckedUpdateWithoutEducationInput>
  create: Prisma.XOR<Prisma.EducationSubItemCreateWithoutEducationInput, Prisma.EducationSubItemUncheckedCreateWithoutEducationInput>
}

export type EducationSubItemUpdateWithWhereUniqueWithoutEducationInput = {
  where: Prisma.EducationSubItemWhereUniqueInput
  data: Prisma.XOR<Prisma.EducationSubItemUpdateWithoutEducationInput, Prisma.EducationSubItemUncheckedUpdateWithoutEducationInput>
}

export type EducationSubItemUpdateManyWithWhereWithoutEducationInput = {
  where: Prisma.EducationSubItemScalarWhereInput
  data: Prisma.XOR<Prisma.EducationSubItemUpdateManyMutationInput, Prisma.EducationSubItemUncheckedUpdateManyWithoutEducationInput>
}

export type EducationSubItemScalarWhereInput = {
  AND?: Prisma.EducationSubItemScalarWhereInput | Prisma.EducationSubItemScalarWhereInput[]
  OR?: Prisma.EducationSubItemScalarWhereInput[]
  NOT?: Prisma.EducationSubItemScalarWhereInput | Prisma.EducationSubItemScalarWhereInput[]
  id?: Prisma.StringFilter<"EducationSubItem"> | string
  educationId?: Prisma.StringFilter<"EducationSubItem"> | string
  title?: Prisma.StringFilter<"EducationSubItem"> | string
  message?: Prisma.StringNullableFilter<"EducationSubItem"> | string | null
  createdAt?: Prisma.DateTimeFilter<"EducationSubItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"EducationSubItem"> | Date | string
}

export type EducationSubItemCreateWithoutTranslationsInput = {
  id?: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  education: Prisma.EducationCreateNestedOneWithoutSubItemsInput
}

export type EducationSubItemUncheckedCreateWithoutTranslationsInput = {
  id?: string
  educationId: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EducationSubItemCreateOrConnectWithoutTranslationsInput = {
  where: Prisma.EducationSubItemWhereUniqueInput
  create: Prisma.XOR<Prisma.EducationSubItemCreateWithoutTranslationsInput, Prisma.EducationSubItemUncheckedCreateWithoutTranslationsInput>
}

export type EducationSubItemUpsertWithoutTranslationsInput = {
  update: Prisma.XOR<Prisma.EducationSubItemUpdateWithoutTranslationsInput, Prisma.EducationSubItemUncheckedUpdateWithoutTranslationsInput>
  create: Prisma.XOR<Prisma.EducationSubItemCreateWithoutTranslationsInput, Prisma.EducationSubItemUncheckedCreateWithoutTranslationsInput>
  where?: Prisma.EducationSubItemWhereInput
}

export type EducationSubItemUpdateToOneWithWhereWithoutTranslationsInput = {
  where?: Prisma.EducationSubItemWhereInput
  data: Prisma.XOR<Prisma.EducationSubItemUpdateWithoutTranslationsInput, Prisma.EducationSubItemUncheckedUpdateWithoutTranslationsInput>
}

export type EducationSubItemUpdateWithoutTranslationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  education?: Prisma.EducationUpdateOneRequiredWithoutSubItemsNestedInput
}

export type EducationSubItemUncheckedUpdateWithoutTranslationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  educationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EducationSubItemCreateManyEducationInput = {
  id?: string
  title: string
  message?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EducationSubItemUpdateWithoutEducationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translations?: Prisma.TranslationUpdateManyWithoutEducationSubItemNestedInput
}

export type EducationSubItemUncheckedUpdateWithoutEducationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  translations?: Prisma.TranslationUncheckedUpdateManyWithoutEducationSubItemNestedInput
}

export type EducationSubItemUncheckedUpdateManyWithoutEducationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  message?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type EducationSubItemCountOutputType
 */

export type EducationSubItemCountOutputType = {
  translations: number
}

export type EducationSubItemCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  translations?: boolean | EducationSubItemCountOutputTypeCountTranslationsArgs
}

/**
 * EducationSubItemCountOutputType without action
 */
export type EducationSubItemCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItemCountOutputType
   */
  select?: Prisma.EducationSubItemCountOutputTypeSelect<ExtArgs> | null
}

/**
 * EducationSubItemCountOutputType without action
 */
export type EducationSubItemCountOutputTypeCountTranslationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TranslationWhereInput
}


export type EducationSubItemSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  educationId?: boolean
  title?: boolean
  message?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  education?: boolean | Prisma.EducationDefaultArgs<ExtArgs>
  translations?: boolean | Prisma.EducationSubItem$translationsArgs<ExtArgs>
  _count?: boolean | Prisma.EducationSubItemCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["educationSubItem"]>

export type EducationSubItemSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  educationId?: boolean
  title?: boolean
  message?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  education?: boolean | Prisma.EducationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["educationSubItem"]>

export type EducationSubItemSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  educationId?: boolean
  title?: boolean
  message?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  education?: boolean | Prisma.EducationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["educationSubItem"]>

export type EducationSubItemSelectScalar = {
  id?: boolean
  educationId?: boolean
  title?: boolean
  message?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type EducationSubItemOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "educationId" | "title" | "message" | "createdAt" | "updatedAt", ExtArgs["result"]["educationSubItem"]>
export type EducationSubItemInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  education?: boolean | Prisma.EducationDefaultArgs<ExtArgs>
  translations?: boolean | Prisma.EducationSubItem$translationsArgs<ExtArgs>
  _count?: boolean | Prisma.EducationSubItemCountOutputTypeDefaultArgs<ExtArgs>
}
export type EducationSubItemIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  education?: boolean | Prisma.EducationDefaultArgs<ExtArgs>
}
export type EducationSubItemIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  education?: boolean | Prisma.EducationDefaultArgs<ExtArgs>
}

export type $EducationSubItemPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "EducationSubItem"
  objects: {
    education: Prisma.$EducationPayload<ExtArgs>
    translations: Prisma.$TranslationPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    educationId: string
    title: string
    message: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["educationSubItem"]>
  composites: {}
}

export type EducationSubItemGetPayload<S extends boolean | null | undefined | EducationSubItemDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload, S>

export type EducationSubItemCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<EducationSubItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: EducationSubItemCountAggregateInputType | true
  }

export interface EducationSubItemDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EducationSubItem'], meta: { name: 'EducationSubItem' } }
  /**
   * Find zero or one EducationSubItem that matches the filter.
   * @param {EducationSubItemFindUniqueArgs} args - Arguments to find a EducationSubItem
   * @example
   * // Get one EducationSubItem
   * const educationSubItem = await prisma.educationSubItem.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EducationSubItemFindUniqueArgs>(args: Prisma.SelectSubset<T, EducationSubItemFindUniqueArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one EducationSubItem that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EducationSubItemFindUniqueOrThrowArgs} args - Arguments to find a EducationSubItem
   * @example
   * // Get one EducationSubItem
   * const educationSubItem = await prisma.educationSubItem.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EducationSubItemFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, EducationSubItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EducationSubItem that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EducationSubItemFindFirstArgs} args - Arguments to find a EducationSubItem
   * @example
   * // Get one EducationSubItem
   * const educationSubItem = await prisma.educationSubItem.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EducationSubItemFindFirstArgs>(args?: Prisma.SelectSubset<T, EducationSubItemFindFirstArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EducationSubItem that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EducationSubItemFindFirstOrThrowArgs} args - Arguments to find a EducationSubItem
   * @example
   * // Get one EducationSubItem
   * const educationSubItem = await prisma.educationSubItem.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EducationSubItemFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, EducationSubItemFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more EducationSubItems that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EducationSubItemFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EducationSubItems
   * const educationSubItems = await prisma.educationSubItem.findMany()
   * 
   * // Get first 10 EducationSubItems
   * const educationSubItems = await prisma.educationSubItem.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const educationSubItemWithIdOnly = await prisma.educationSubItem.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends EducationSubItemFindManyArgs>(args?: Prisma.SelectSubset<T, EducationSubItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a EducationSubItem.
   * @param {EducationSubItemCreateArgs} args - Arguments to create a EducationSubItem.
   * @example
   * // Create one EducationSubItem
   * const EducationSubItem = await prisma.educationSubItem.create({
   *   data: {
   *     // ... data to create a EducationSubItem
   *   }
   * })
   * 
   */
  create<T extends EducationSubItemCreateArgs>(args: Prisma.SelectSubset<T, EducationSubItemCreateArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many EducationSubItems.
   * @param {EducationSubItemCreateManyArgs} args - Arguments to create many EducationSubItems.
   * @example
   * // Create many EducationSubItems
   * const educationSubItem = await prisma.educationSubItem.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends EducationSubItemCreateManyArgs>(args?: Prisma.SelectSubset<T, EducationSubItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many EducationSubItems and returns the data saved in the database.
   * @param {EducationSubItemCreateManyAndReturnArgs} args - Arguments to create many EducationSubItems.
   * @example
   * // Create many EducationSubItems
   * const educationSubItem = await prisma.educationSubItem.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many EducationSubItems and only return the `id`
   * const educationSubItemWithIdOnly = await prisma.educationSubItem.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends EducationSubItemCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, EducationSubItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a EducationSubItem.
   * @param {EducationSubItemDeleteArgs} args - Arguments to delete one EducationSubItem.
   * @example
   * // Delete one EducationSubItem
   * const EducationSubItem = await prisma.educationSubItem.delete({
   *   where: {
   *     // ... filter to delete one EducationSubItem
   *   }
   * })
   * 
   */
  delete<T extends EducationSubItemDeleteArgs>(args: Prisma.SelectSubset<T, EducationSubItemDeleteArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one EducationSubItem.
   * @param {EducationSubItemUpdateArgs} args - Arguments to update one EducationSubItem.
   * @example
   * // Update one EducationSubItem
   * const educationSubItem = await prisma.educationSubItem.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends EducationSubItemUpdateArgs>(args: Prisma.SelectSubset<T, EducationSubItemUpdateArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more EducationSubItems.
   * @param {EducationSubItemDeleteManyArgs} args - Arguments to filter EducationSubItems to delete.
   * @example
   * // Delete a few EducationSubItems
   * const { count } = await prisma.educationSubItem.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends EducationSubItemDeleteManyArgs>(args?: Prisma.SelectSubset<T, EducationSubItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EducationSubItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EducationSubItemUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EducationSubItems
   * const educationSubItem = await prisma.educationSubItem.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends EducationSubItemUpdateManyArgs>(args: Prisma.SelectSubset<T, EducationSubItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EducationSubItems and returns the data updated in the database.
   * @param {EducationSubItemUpdateManyAndReturnArgs} args - Arguments to update many EducationSubItems.
   * @example
   * // Update many EducationSubItems
   * const educationSubItem = await prisma.educationSubItem.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more EducationSubItems and only return the `id`
   * const educationSubItemWithIdOnly = await prisma.educationSubItem.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends EducationSubItemUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, EducationSubItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one EducationSubItem.
   * @param {EducationSubItemUpsertArgs} args - Arguments to update or create a EducationSubItem.
   * @example
   * // Update or create a EducationSubItem
   * const educationSubItem = await prisma.educationSubItem.upsert({
   *   create: {
   *     // ... data to create a EducationSubItem
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EducationSubItem we want to update
   *   }
   * })
   */
  upsert<T extends EducationSubItemUpsertArgs>(args: Prisma.SelectSubset<T, EducationSubItemUpsertArgs<ExtArgs>>): Prisma.Prisma__EducationSubItemClient<runtime.Types.Result.GetResult<Prisma.$EducationSubItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of EducationSubItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EducationSubItemCountArgs} args - Arguments to filter EducationSubItems to count.
   * @example
   * // Count the number of EducationSubItems
   * const count = await prisma.educationSubItem.count({
   *   where: {
   *     // ... the filter for the EducationSubItems we want to count
   *   }
   * })
  **/
  count<T extends EducationSubItemCountArgs>(
    args?: Prisma.Subset<T, EducationSubItemCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EducationSubItemCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a EducationSubItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EducationSubItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends EducationSubItemAggregateArgs>(args: Prisma.Subset<T, EducationSubItemAggregateArgs>): Prisma.PrismaPromise<GetEducationSubItemAggregateType<T>>

  /**
   * Group by EducationSubItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EducationSubItemGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends EducationSubItemGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EducationSubItemGroupByArgs['orderBy'] }
      : { orderBy?: EducationSubItemGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, EducationSubItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEducationSubItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the EducationSubItem model
 */
readonly fields: EducationSubItemFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EducationSubItem.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EducationSubItemClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  education<T extends Prisma.EducationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EducationDefaultArgs<ExtArgs>>): Prisma.Prisma__EducationClient<runtime.Types.Result.GetResult<Prisma.$EducationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  translations<T extends Prisma.EducationSubItem$translationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EducationSubItem$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the EducationSubItem model
 */
export interface EducationSubItemFieldRefs {
  readonly id: Prisma.FieldRef<"EducationSubItem", 'String'>
  readonly educationId: Prisma.FieldRef<"EducationSubItem", 'String'>
  readonly title: Prisma.FieldRef<"EducationSubItem", 'String'>
  readonly message: Prisma.FieldRef<"EducationSubItem", 'String'>
  readonly createdAt: Prisma.FieldRef<"EducationSubItem", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"EducationSubItem", 'DateTime'>
}
    

// Custom InputTypes
/**
 * EducationSubItem findUnique
 */
export type EducationSubItemFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * Filter, which EducationSubItem to fetch.
   */
  where: Prisma.EducationSubItemWhereUniqueInput
}

/**
 * EducationSubItem findUniqueOrThrow
 */
export type EducationSubItemFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * Filter, which EducationSubItem to fetch.
   */
  where: Prisma.EducationSubItemWhereUniqueInput
}

/**
 * EducationSubItem findFirst
 */
export type EducationSubItemFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * Filter, which EducationSubItem to fetch.
   */
  where?: Prisma.EducationSubItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EducationSubItems to fetch.
   */
  orderBy?: Prisma.EducationSubItemOrderByWithRelationInput | Prisma.EducationSubItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EducationSubItems.
   */
  cursor?: Prisma.EducationSubItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EducationSubItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EducationSubItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EducationSubItems.
   */
  distinct?: Prisma.EducationSubItemScalarFieldEnum | Prisma.EducationSubItemScalarFieldEnum[]
}

/**
 * EducationSubItem findFirstOrThrow
 */
export type EducationSubItemFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * Filter, which EducationSubItem to fetch.
   */
  where?: Prisma.EducationSubItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EducationSubItems to fetch.
   */
  orderBy?: Prisma.EducationSubItemOrderByWithRelationInput | Prisma.EducationSubItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EducationSubItems.
   */
  cursor?: Prisma.EducationSubItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EducationSubItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EducationSubItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EducationSubItems.
   */
  distinct?: Prisma.EducationSubItemScalarFieldEnum | Prisma.EducationSubItemScalarFieldEnum[]
}

/**
 * EducationSubItem findMany
 */
export type EducationSubItemFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * Filter, which EducationSubItems to fetch.
   */
  where?: Prisma.EducationSubItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EducationSubItems to fetch.
   */
  orderBy?: Prisma.EducationSubItemOrderByWithRelationInput | Prisma.EducationSubItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing EducationSubItems.
   */
  cursor?: Prisma.EducationSubItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EducationSubItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EducationSubItems.
   */
  skip?: number
  distinct?: Prisma.EducationSubItemScalarFieldEnum | Prisma.EducationSubItemScalarFieldEnum[]
}

/**
 * EducationSubItem create
 */
export type EducationSubItemCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * The data needed to create a EducationSubItem.
   */
  data: Prisma.XOR<Prisma.EducationSubItemCreateInput, Prisma.EducationSubItemUncheckedCreateInput>
}

/**
 * EducationSubItem createMany
 */
export type EducationSubItemCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many EducationSubItems.
   */
  data: Prisma.EducationSubItemCreateManyInput | Prisma.EducationSubItemCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * EducationSubItem createManyAndReturn
 */
export type EducationSubItemCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * The data used to create many EducationSubItems.
   */
  data: Prisma.EducationSubItemCreateManyInput | Prisma.EducationSubItemCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * EducationSubItem update
 */
export type EducationSubItemUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * The data needed to update a EducationSubItem.
   */
  data: Prisma.XOR<Prisma.EducationSubItemUpdateInput, Prisma.EducationSubItemUncheckedUpdateInput>
  /**
   * Choose, which EducationSubItem to update.
   */
  where: Prisma.EducationSubItemWhereUniqueInput
}

/**
 * EducationSubItem updateMany
 */
export type EducationSubItemUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update EducationSubItems.
   */
  data: Prisma.XOR<Prisma.EducationSubItemUpdateManyMutationInput, Prisma.EducationSubItemUncheckedUpdateManyInput>
  /**
   * Filter which EducationSubItems to update
   */
  where?: Prisma.EducationSubItemWhereInput
  /**
   * Limit how many EducationSubItems to update.
   */
  limit?: number
}

/**
 * EducationSubItem updateManyAndReturn
 */
export type EducationSubItemUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * The data used to update EducationSubItems.
   */
  data: Prisma.XOR<Prisma.EducationSubItemUpdateManyMutationInput, Prisma.EducationSubItemUncheckedUpdateManyInput>
  /**
   * Filter which EducationSubItems to update
   */
  where?: Prisma.EducationSubItemWhereInput
  /**
   * Limit how many EducationSubItems to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * EducationSubItem upsert
 */
export type EducationSubItemUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * The filter to search for the EducationSubItem to update in case it exists.
   */
  where: Prisma.EducationSubItemWhereUniqueInput
  /**
   * In case the EducationSubItem found by the `where` argument doesn't exist, create a new EducationSubItem with this data.
   */
  create: Prisma.XOR<Prisma.EducationSubItemCreateInput, Prisma.EducationSubItemUncheckedCreateInput>
  /**
   * In case the EducationSubItem was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EducationSubItemUpdateInput, Prisma.EducationSubItemUncheckedUpdateInput>
}

/**
 * EducationSubItem delete
 */
export type EducationSubItemDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
  /**
   * Filter which EducationSubItem to delete.
   */
  where: Prisma.EducationSubItemWhereUniqueInput
}

/**
 * EducationSubItem deleteMany
 */
export type EducationSubItemDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EducationSubItems to delete
   */
  where?: Prisma.EducationSubItemWhereInput
  /**
   * Limit how many EducationSubItems to delete.
   */
  limit?: number
}

/**
 * EducationSubItem.translations
 */
export type EducationSubItem$translationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Translation
   */
  select?: Prisma.TranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Translation
   */
  omit?: Prisma.TranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TranslationInclude<ExtArgs> | null
  where?: Prisma.TranslationWhereInput
  orderBy?: Prisma.TranslationOrderByWithRelationInput | Prisma.TranslationOrderByWithRelationInput[]
  cursor?: Prisma.TranslationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TranslationScalarFieldEnum | Prisma.TranslationScalarFieldEnum[]
}

/**
 * EducationSubItem without action
 */
export type EducationSubItemDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EducationSubItem
   */
  select?: Prisma.EducationSubItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EducationSubItem
   */
  omit?: Prisma.EducationSubItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EducationSubItemInclude<ExtArgs> | null
}
