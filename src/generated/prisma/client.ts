
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
const __dirname = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums.ts"
import * as $Class from "./internal/class.ts"
import * as Prisma from "./internal/prismaNamespace.ts"

export * as $Enums from './enums.ts'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-darwin-arm64.dylib.node")
path.join(process.cwd(), "src/generated/prisma/libquery_engine-darwin-arm64.dylib.node")

/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model UserBannerImage
 * 
 */
export type UserBannerImage = Prisma.UserBannerImageModel
/**
 * Model Education
 * 
 */
export type Education = Prisma.EducationModel
/**
 * Model EducationSubItem
 * 
 */
export type EducationSubItem = Prisma.EducationSubItemModel
/**
 * Model TechStack
 * 
 */
export type TechStack = Prisma.TechStackModel
/**
 * Model TechStackOnExperiences
 * 
 */
export type TechStackOnExperiences = Prisma.TechStackOnExperiencesModel
/**
 * Model Experience
 * 
 */
export type Experience = Prisma.ExperienceModel
/**
 * Model ExperienceRole
 * 
 */
export type ExperienceRole = Prisma.ExperienceRoleModel
/**
 * Model Task
 * 
 */
export type Task = Prisma.TaskModel
/**
 * Model Project
 * 
 */
export type Project = Prisma.ProjectModel
/**
 * Model TechStackOnProjects
 * 
 */
export type TechStackOnProjects = Prisma.TechStackOnProjectsModel
/**
 * Model TagsOnProjects
 * 
 */
export type TagsOnProjects = Prisma.TagsOnProjectsModel
/**
 * Model Blog
 * 
 */
export type Blog = Prisma.BlogModel
/**
 * Model Tag
 * 
 */
export type Tag = Prisma.TagModel
/**
 * Model BlogTag
 * 
 */
export type BlogTag = Prisma.BlogTagModel
/**
 * Model Translation
 * 
 */
export type Translation = Prisma.TranslationModel


